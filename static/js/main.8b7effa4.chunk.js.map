{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/Navigation/Navigation.js","components/elements/MovieThumb/MovieThumb.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/Actor/Actor.js","components/elements/Spinner/Spinner.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/Home/Home.js","components/App/App.js","index.js"],"names":["Header","react_default","a","createElement","className","Link","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","Navigation","props","movie","MovieThumb","clickable","pathname","concat","movieId","movieName","image","MovieInfo","style","background","backdrop_path","elements_MovieThumb_MovieThumb","poster_path","title","overview","substring","min","max","optimum","low","high","value","vote_average","directors","length","map","element","i","key","name","lib_default","size","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","FourColGrid","header","loading","gridElements","React","Children","children","pop","renderElements","Actor","actor","profile_path","character","Spinner","Movie","state","actors","fetchItems","endpoint","fetch","then","result","json","status_code","_this","setState","match","params","crew","filter","member","job","cast","localStorage","setItem","JSON","stringify","catch","error","console","getItem","this","parse","Object","objectSpread","elements_Navigation_Navigation","location","elements_MovieInfo_MovieInfo","elements_MovieInfoBar_MovieInfoBar","runtime","elements_FourColGrid_FourColGrid","elements_Actor_Actor","elements_Spinner_Spinner","Component","NotFound","HeroImage","text","SearchBar","timeout","doSearch","event","target","clearTimeout","setTimeout","callback","type","placeholder","onChange","LoadMoreBtn","onClick","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","loadMoreItems","toConsumableArray","results","page","total_pages","elements_HeroImage_HeroImage","original_title","elements_SearchBar_SearchBar","id","elements_LoadMoreBtn_LoadMoreBtn","App","BrowserRouter","basename","process","Fragment","elements_Header_Header","Switch","Route","path","component","exact","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"+eAiBeA,SAbA,WACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KACTL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYG,IAAI,+BAA+BC,IAAI,eAElEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBG,IAAI,yBAAyBC,IAAI,8DCPnEC,EAAU,gCACVC,EAAU,mCAMVC,EAAiB,8BCORC,SAdI,SAACC,GAClB,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAK,KACTL,EAAAC,EAAAC,cAAA,kBAEFF,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,SAAKU,EAAMC,2BCaJC,SApBI,SAACF,GAClB,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXS,EAAMG,UACNf,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,CAAEW,SAAQ,IAAAC,OAAML,EAAMM,SAAWC,UAAS,GAAAF,OAAKL,EAAMO,aAC7DnB,EAAAC,EAAAC,cAAA,OAAKI,IAAKM,EAAMQ,MAAOb,IAAI,iBAG7BP,EAAAC,EAAAC,cAAA,OAAKI,IAAKM,EAAMQ,MAAOb,IAAI,mBCgCpBc,SAnCG,SAACT,GACjB,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbmB,MAAO,CACLC,WAAYX,EAAMC,MAAMW,cAAZ,QAAAP,OAAoCP,GAApCO,OHAE,SGAFA,OAAqEL,EAAMC,MAAMW,cAAjF,MAAqG,SAGnHxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAACuB,EAAD,CACEL,MAAQR,EAAMC,MAAMa,YAAZ,GAAAT,OAA6BP,GAA7BO,OHJA,QGIAA,OAA4DL,EAAMC,MAAMa,aAAgB,wBAChGX,WAAW,KAGff,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UAAMU,EAAMC,MAAMc,OAClB3B,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,SAAkBU,EAAMC,MAAMe,SApBzBC,UAAU,EAAG,KAAO,OAqBzB7B,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO4B,IAAI,IAAIC,IAAI,MAAMC,QAAQ,MAAMC,IAAI,KAAKC,KAAK,KAAKC,MAAkC,GAA3BvB,EAAMC,MAAMuB,eAC7EpC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAeS,EAAMC,MAAMuB,eAExCxB,EAAMyB,UAAUC,OAAS,EAAItC,EAAAC,EAAAC,cAAA,uBAAqBF,EAAAC,EAAAC,cAAA,sBAClDU,EAAMyB,UAAUE,IAAK,SAACC,EAASC,GAC7B,OAAOzC,EAAAC,EAAAC,cAAA,KAAGwC,IAAKD,EAAGtC,UAAU,iBAAkBqC,EAAQG,SAI5D3C,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAaE,UAAU,UAAUwC,KAAK,OAAOE,KAAK,WC/B7CC,EAAe,SAAEC,GAM5B,OALgB,IAAIC,KAAKC,aAAa,QAAS,CAC7C3B,MAAO,WACP4B,SAAU,MACVC,sBAAuB,IAERC,OAAQL,ICaZM,SAtBM,SAACzC,GACpB,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAaE,UAAU,UAAUwC,KAAK,UAAUE,KAAK,OACrD7C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BAAhB,iBDVc,SAACmD,GACvB,IAAMC,EAAQC,KAAKC,MAAMH,EAAO,IAC1BI,EAAOJ,EAAO,GACpB,SAAArC,OAAUsC,EAAV,MAAAtC,OAAoByC,EAApB,KCOgEC,CAAS/C,EAAM0C,QAEzEtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAaE,UAAU,cAAcwC,KAAK,QAAQE,KAAK,OACvD7C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BAAhB,WAAkD2C,EAAalC,EAAMgD,UAEvE5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAa0C,KAAK,SAASE,KAAK,OAChC7C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BAAhB,YAAmD2C,EAAalC,EAAMiD,eCejEC,SA9BK,SAAClD,GAenB,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXS,EAAMmD,SAAWnD,EAAMoD,QAAUhE,EAAAC,EAAAC,cAAA,UAAMU,EAAMmD,QAAgB,KAC/D/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAhBI,WACrB,IAAM8D,EAAeC,IAAMC,SAAS5B,IAAI3B,EAAMwD,SAAU,SAAC5B,EAASC,GAChE,OACEzC,EAAAC,EAAAC,cAAA,OAAKwC,IAAKD,EAAGtC,UAAU,qBACpBqC,KAMP,OAFAyB,EAAaI,MAENJ,EAODK,OCJKC,SAfD,SAAC3D,GAGb,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OACEI,IAAKM,EAAM4D,MAAMC,aAAZ,GAAAxD,OAA8BP,GAA9BO,OALS,QAKTA,OAA6DL,EAAM4D,MAAMC,cAAiB,wBAC/FlE,IAAI,eAENP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBS,EAAM4D,MAAM7B,MAC/C3C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBS,EAAM4D,MAAME,cCL3CC,SANC,WACd,OACE3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aCgFJyE,oNA1EbC,MAAQ,CACNhE,MAAO,KACPiE,OAAQ,KACRzC,UAAW,GACX2B,SAAS,KAeXe,WAAa,SAACC,GACZC,MAAMD,GACLE,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAC,GAEAA,EAAOE,YACTC,EAAKC,SAAS,CAAEvB,SAAS,IAEzBsB,EAAKC,SAAS,CAAE1E,MAAOsE,GAAU,WAE/B,IAAMH,EAAQ,GAAA/D,OAAMT,EAAN,UAAAS,OAAsBqE,EAAK1E,MAAM4E,MAAMC,OAAOvE,QAA9C,qBAAAD,OAAyER,EAAzE,mBACdwE,MAAMD,GACLE,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAC,GACJ,IAAM9C,EAAY8C,EAAOO,KAAKC,OAAQ,SAACC,GAAD,MAA2B,aAAfA,EAAOC,MAEzDP,EAAKC,SAAS,CACZT,OAAQK,EAAOW,KACfzD,YACA2B,SAAS,GACR,WACD+B,aAAaC,QAAb,GAAA/E,OAAwBqE,EAAK1E,MAAM4E,MAAMC,OAAOvE,SAAW+E,KAAKC,UAAUZ,EAAKT,gBAKtFsB,MAAO,SAAAC,GAAK,OAAIC,QAAQD,MAAM,SAAUA,yFArC3C,GAAIL,aAAaO,QAAb,GAAArF,OAAwBsF,KAAK3F,MAAM4E,MAAMC,OAAOvE,UAAY,CAC9D,IAAM2D,EAAQoB,KAAKO,MAAMT,aAAaO,QAAb,GAAArF,OAAwBsF,KAAK3F,MAAM4E,MAAMC,OAAOvE,WACzEqF,KAAKhB,SAALkB,OAAAC,EAAA,EAAAD,CAAA,GAAmB5B,QACd,CACL0B,KAAKhB,SAAS,CAAEvB,SAAS,IAEzB,IAAMgB,EAAQ,GAAA/D,OAAMT,EAAN,UAAAS,OAAsBsF,KAAK3F,MAAM4E,MAAMC,OAAOvE,QAA9C,aAAAD,OAAiER,EAAjE,mBACd8F,KAAKxB,WAAWC,qCAkClB,OACEhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACZoG,KAAK1B,MAAMhE,MACVb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyG,EAAD,CAAY9F,MAAO0F,KAAK3F,MAAMgG,SAASzF,YACvCnB,EAAAC,EAAAC,cAAC2G,EAAD,CAAWhG,MAAO0F,KAAK1B,MAAMhE,MAAOwB,UAAWkE,KAAK1B,MAAMxC,YAC1DrC,EAAAC,EAAAC,cAAC4G,EAAD,CAAcxD,KAAMiD,KAAK1B,MAAMhE,MAAMkG,QAASnD,OAAQ2C,KAAK1B,MAAMhE,MAAM+C,OAAQC,QAAS0C,KAAK1B,MAAMhE,MAAMgD,WAE3G,KACD0C,KAAK1B,MAAMC,OACV9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAC8G,EAAD,CAAajD,OAAQ,UAClBwC,KAAK1B,MAAMC,OAAOvC,IAAK,SAACC,EAASC,GAChC,OAAOzC,EAAAC,EAAAC,cAAC+G,EAAD,CAAOvE,IAAKD,EAAG+B,MAAOhC,QAInC,KACC+D,KAAK1B,MAAMC,QAAWyB,KAAK1B,MAAMb,QAAqC,KAA3BhE,EAAAC,EAAAC,cAAA,6BAC5CqG,KAAK1B,MAAMb,QAAUhE,EAAAC,EAAAC,cAACgH,EAAD,MAAc,aArEzBC,cCALC,EARE,WACf,OACEpH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8DCoBSmH,SAtBG,SAACzG,GACjB,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbmB,MAAS,CACPC,WAAU,qIAAAN,OAKHL,EAAMQ,MALH,iBAQZpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UAAMU,EAAMe,OACZ3B,EAAAC,EAAAC,cAAA,SAAKU,EAAM0G,WCoBNC,oNAjCb1C,MAAQ,CACN1C,MAAO,MAGTqF,QAAU,OAEVC,SAAW,SAACC,GACVpC,EAAKC,SAAS,CAAEpD,MAAOuF,EAAMC,OAAOxF,QACpCyF,aAAatC,EAAKkC,SAElBlC,EAAKkC,QAAUK,WAAY,WACzBvC,EAAK1E,MAAMkH,SAAUxC,EAAKT,MAAM1C,QAC/B,8EAIH,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAaE,UAAU,iBAAiBwC,KAAK,SAASE,KAAK,OAC3D7C,EAAAC,EAAAC,cAAA,SACE6H,KAAK,OACL5H,UAAU,uBACV6H,YAAY,iBACZC,SAAW1B,KAAKkB,SAChBtF,MAAQoE,KAAK1B,MAAM1C,iBA1BPgF,cCOTe,SARK,SAACtH,GACnB,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBgI,QAAUvH,EAAMuH,SAChDnI,EAAAC,EAAAC,cAAA,SAAKU,EAAM0G,SCyHFc,oNAlHbvD,MAAQ,CAENwD,OAAQ,GAERC,UAAW,KAEXtE,SAAS,EAETuE,YAAa,EACbC,WAAY,EAEZC,WAAY,MAcdC,YAAc,SAACD,GACb,IAAIzD,EAAW,GACfM,EAAKC,SAAS,CACZ8C,OAAQ,GACRrE,SAAS,EACTyE,eAIAzD,EADgB,KAAfyD,EACO,GAAAxH,OAAMT,EAAN,0BAAAS,OAAsCR,EAAtC,0BAEA,GAAAQ,OAAMT,EAAN,yBAAAS,OAAqCR,EAArC,0BAAAQ,OAAqEqE,EAAKT,MAAM4D,YAE1FnD,EAAKP,WAAWC,MAGlB2D,cAAgB,WACd,IAAI3D,EAAW,GACfM,EAAKC,SAAS,CAAEvB,SAAS,IAGvBgB,EAD2B,KAA1BM,EAAKT,MAAM4D,WACJ,GAAAxH,OAAMT,EAAN,0BAAAS,OAAsCR,EAAtC,yBAAAQ,OAAqEqE,EAAKT,MAAM0D,YAAc,GAE9F,GAAAtH,OAAMT,EAAN,yBAAAS,OAAqCR,EAArC,0BAAAQ,OAAqEqE,EAAKT,MAAM4D,WAAhF,UAAAxH,OAAmGqE,EAAKT,MAAM0D,YAAc,GAEtIjD,EAAKP,WAAWC,MAGlBD,WAAa,SAACC,GACZC,MAAOD,GACNE,KAAM,SAAAC,GAAM,OAAIA,EAAOC,SACvBF,KAAM,SAAAC,GAELG,EAAKC,SAAS,CAEZ8C,OAAO5B,OAAAmC,EAAA,EAAAnC,CAAKnB,EAAKT,MAAMwD,QAAjBpH,OAAAwF,OAAAmC,EAAA,EAAAnC,CAA4BtB,EAAO0D,UACzCP,UAAWhD,EAAKT,MAAMyD,WAAanD,EAAO0D,QAAQ,GAClD7E,SAAS,EACTuE,YAAapD,EAAO2D,KACpBN,WAAYrD,EAAO4D,aAClB,WAC6B,KAA1BzD,EAAKT,MAAM4D,YACb1C,aAAaC,QAAQ,YAAaC,KAAKC,UAAUZ,EAAKT,gGApD5D,GAAIkB,aAAaO,QAAQ,aAAa,CACpC,IAAMzB,EAAQoB,KAAKO,MAAMT,aAAaO,QAAQ,cAC9CC,KAAKhB,SAALkB,OAAAC,EAAA,EAAAD,CAAA,GAAmB5B,QACd,CACL0B,KAAKhB,SAAS,CAACvB,SAAS,IACxB,IAAMgB,EAAQ,GAAA/D,OAAMT,EAAN,0BAAAS,OAAsCR,EAAtC,0BACd8F,KAAKxB,WAAWC,qCAoDlB,OACEhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXoG,KAAK1B,MAAMyD,UACbtI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8I,EAAD,CACE5H,MAAK,GAAAH,OAAMP,GAANO,Od9EK,Sc8ELA,OAAuCsF,KAAK1B,MAAMyD,UAAU9G,eACjEG,MAAQ4E,KAAK1B,MAAMyD,UAAUW,eAC7B3B,KAAOf,KAAK1B,MAAMyD,UAAU1G,WAE9B5B,EAAAC,EAAAC,cAACgJ,EAAD,CAAWpB,SAAWvB,KAAKmC,eACpB,KACT1I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAC8G,EAAD,CACEjD,OAASwC,KAAK1B,MAAM4D,WAAa,gBAAkB,iBACnDzE,QAAUuC,KAAK1B,MAAMb,SAGnBuC,KAAK1B,MAAMwD,OAAO9F,IAAK,SAACC,EAASC,GACjC,OAAOzC,EAAAC,EAAAC,cAACuB,EAAD,CACGiB,IAAKD,EACL1B,WAAW,EACXK,MAAQoB,EAAQd,YAAR,GAAAT,OAAyBP,GAAzBO,Od5FZ,Qc4FYA,OAAwDuB,EAAQd,aAAgB,wBACxFR,QAASsB,EAAQ2G,GACjBhI,UAAWqB,EAAQyG,mBAXjC,KAeE1C,KAAK1B,MAAMb,QAAUhE,EAAAC,EAAAC,cAACgH,EAAD,MAAc,KAElCX,KAAK1B,MAAM0D,aAAehC,KAAK1B,MAAM2D,aAAejC,KAAK1B,MAAMb,QAChEhE,EAAAC,EAAAC,cAACkJ,EAAD,CACE9B,KAAK,eACLa,QAAU5B,KAAKoC,gBACZ,cA5GExB,cCUJkC,EAfH,WACV,OACErJ,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CAAeC,SAAUC,oBACvBxJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMwJ,SAAP,KACEzJ,EAAAC,EAAAC,cAACwJ,EAAD,MACA1J,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,KACA3J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOC,KAAM,IAAKC,UAAY1B,EAAO2B,OAAK,IAC1C/J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAYlF,EAAQmF,OAAK,IACjD/J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAOE,UAAY1C,cCV3B4C,IAASC,OAAOjK,EAAAC,EAAAC,cAACgK,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.8b7effa4.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  return(\r\n    <div className=\"rmdb-header\">\r\n      <div className=\"rmdb-header-content\">\r\n        <Link to=\"/\">\r\n        <img className=\"rmdb-logo\" src=\"./images/reactMovie_logo.png\" alt=\"rmdb-logo\"/>\r\n        </Link> \r\n        <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\"/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","// Configuration for TMDB\r\n// To see the latest configuration fetch ir from:\r\n// https://API_CONFIG_URL\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = 'abc7012985dc51340a6add7916d631ca';\r\n\r\n// Images\r\n// An image URL looks like this example:\r\n// URL_API_SITE\r\n\r\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\r\n\r\n// Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w500';\r\n\r\nexport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n  return(\r\n    <div className=\"rmdb-navigation\">\r\n      <div className=\"rmdb-navigation-content\">\r\n        <Link to= {'/'}>\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>/</p>\r\n        <p>{ props.movie }</p>     \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'; \r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = (props) => {\r\n  return(\r\n    <div className=\"rmdb-moviethumb\">\r\n      { props.clickable ? \r\n        <Link to={{ pathname: `/${props.movieId}`, movieName: `${props.movieName}` }}>\r\n          <img src={props.image} alt=\"movie-thumb\" />\r\n        </Link>\r\n      :\r\n        <img src={props.image} alt=\"movie-thumb\" />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieThumb.propTypes = {\r\n   image: PropTypes.string,\r\n   movieId: PropTypes.number,\r\n   movieName: PropTypes.string\r\n}\r\n\r\nexport default MovieThumb;  ","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nvar truncateText = (text) =>{\r\n  return (text.substring(0, 250) + '...');\r\n}\r\n\r\nconst MovieInfo = (props) => {\r\n  return(\r\n    <div className=\"rmdb-movieinfo\"\r\n      style={{\r\n        background: props.movie.backdrop_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')` : '#000'\r\n      }}\r\n    >\r\n      <div className=\"rmdb-movieinfo-content\">\r\n        <div className=\"rmdb-movieinfo-thumb\">\r\n          <MovieThumb \r\n            image={ props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg' }\r\n            clickable={false}\r\n          />\r\n        </div>\r\n        <div className=\"rmdb-movieinfo-text\">\r\n          <h1>{ props.movie.title }</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{ truncateText(props.movie.overview) }</p>\r\n          <h3>IMDB RATING</h3>\r\n          <div className=\"rmdb-rating\">\r\n            <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n            <p className=\"rmdb-score\">{ props.movie.vote_average }</p>\r\n          </div>\r\n          { props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3> }\r\n          { props.directors.map( (element, i) => {\r\n              return <p key={i} className=\"rmdb-director\">{ element.name }</p>\r\n            })\r\n          }\r\n        </div>\r\n        <FontAwesome className=\"fa-film\" name=\"film\" size=\"2x\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfo;","// Convert to hours and minutes\r\nexport const calcTime = (time) => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n};\r\n\r\n// Number on currency $usd format\r\nexport const convertMoney = ( money ) => {\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatter.format( money );\r\n};","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => {\r\n  return(\r\n    <div className=\"rmdb-movieinfobar\">\r\n      <div className=\"rmdb-movieinfobar-content\">\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">Running time: {calcTime(props.time)}</span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa fa-money\" name=\"money\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome name=\"ticket\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfoBar;","import React from 'react';\r\nimport  PropTypes from 'prop-types';\r\nimport './FourColGrid.css';\r\n\r\nconst FourColGrid = (props) => {\r\n\r\n  const renderElements = () => {\r\n    const gridElements = React.Children.map(props.children, (element, i) => {\r\n      return (\r\n        <div key={i} className=\"rmdb-grid-element\">\r\n          {element}\r\n        </div>\r\n      );\r\n    }); \r\n    gridElements.pop();\r\n\r\n    return gridElements;\r\n  };\r\n\r\n  return(\r\n    <div className=\"rmdb-grid\">\r\n      { props.header && !props.loading ? <h1>{ props.header }</h1> : null }\r\n      <div className=\"rmdb-grid-content\">\r\n        { renderElements() }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFourColGrid.propTypes = {\r\n  header: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport { IMAGE_BASE_URL } from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n  const POSTER_SIZE = \"w154\";\r\n\r\n  return(\r\n    <div className=\"rmdb-actor\">\r\n      <img \r\n        src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\r\n        alt=\"actorthumb\"\r\n      />\r\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n      <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actor;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return(\r\n    <div className=\"loader\"></div>\r\n  );\r\n};\r\n\r\nexport default Spinner;  ","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation';\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\r\n      const state = JSON.parse(localStorage.getItem(`${this.props.match.params.movieId}`));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      // First fetch the movie ...\r\n      const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n    .then(result => result.json())\r\n    .then(result => {\r\n\r\n      if (result.status_code)\r\n        this.setState({ loading: false });\r\n      else {\r\n        this.setState({ movie: result }, () => {\r\n          // ... then fetch actors in the setState callback function\r\n          const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}&language=en-US`;\r\n          fetch(endpoint)\r\n          .then(result => result.json())\r\n          .then(result => {\r\n            const directors = result.crew.filter( (member) => member.job === \"Director\");\r\n\r\n            this.setState({ \r\n              actors: result.cast,\r\n              directors,\r\n              loading: false\r\n            }, () => {\r\n              localStorage.setItem(`${this.props.match.params.movieId}`, JSON.stringify(this.state))\r\n            });\r\n          });\r\n        });\r\n      }\r\n    }).catch( error => console.error('Error:', error))\r\n  };\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"rmdb-movie\">\r\n        {this.state.movie ? \r\n          <div>\r\n            <Navigation movie={this.props.location.movieName} />\r\n            <MovieInfo movie={this.state.movie} directors={this.state.directors} />\r\n            <MovieInfoBar time={this.state.movie.runtime} budget={this.state.movie.budget} revenue={this.state.movie.revenue} />\r\n          </div>\r\n        : null }\r\n        {this.state.actors ? \r\n          <div className=\"rmdb-movie-grid\">\r\n            <FourColGrid header={'Actors'}>\r\n              {this.state.actors.map( (element, i) => {\r\n                return <Actor key={i} actor={element} />\r\n              })}\r\n            </FourColGrid>\r\n          </div>\r\n        : null }\r\n        { !this.state.actors && !this.state.loading ? <h1>No movie found!</h1> : null }\r\n        { this.state.loading ? <Spinner /> : null }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Whoooops. This page doesn't exist :( .</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => {\r\n  return(\r\n    <div className=\"rmdb-heroimage\"\r\n      style = {{\r\n        background: \r\n        `linear-gradient(to bottom, rgba(0,0,0,0)\r\n        39%, rgba(0,0,0,0)\r\n        41%, rgba(0,0,0,0.65)\r\n        100%),\r\n        url('${props.image}'), #1c1c1c`\r\n      }}\r\n    >\r\n      <div className=\"rmdb-heroimage-content\">\r\n        <div className=\"rmdb-heroimage-text\">\r\n          <h1>{ props.title }</h1>\r\n          <p>{ props.text }</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeroImage;","import React, { Component } from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    value: ''\r\n  }\r\n\r\n  timeout = null;\r\n\r\n  doSearch = (event) => {\r\n    this.setState({ value: event.target.value });\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout( () => {\r\n      this.props.callback( this.state.value );\r\n    }, 500);\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"rmdb-searchbar\">\r\n        <div className=\"rmdb-searchbar-content\">\r\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />  \r\n          <input \r\n            type=\"text\"\r\n            className=\"rmdb-searchbar-input\"\r\n            placeholder=\"Type to search\"\r\n            onChange={ this.doSearch }\r\n            value={ this.state.value }\r\n          />\r\n        </div>  \r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n  return(\r\n    <div className=\"rmdb-loadmorebtn\" onClick={ props.onClick }>\r\n      <p>{ props.text }</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadMoreBtn;  ","import React, { Component } from 'react';\r\n\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../../config';\r\n\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    // To collect the movies\r\n    movies: [],\r\n    // For Big Image size\r\n    heroImage: null,\r\n    // To check if we are loading\r\n    loading: false,\r\n    // For pager\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    // For search movie\r\n    searchTerm: ''\r\n  }\r\n\r\n  componentDidMount(){\r\n    if (localStorage.getItem('HomeState')){\r\n      const state = JSON.parse(localStorage.getItem('HomeState'));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({loading: true});\r\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  };\r\n\r\n  searchItems = (searchTerm) => {\r\n    let endpoint = '';\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm,\r\n    });\r\n\r\n    if(searchTerm === ''){\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=es-US&query=${this.state.searchTerm}`\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    let endpoint = '';\r\n    this.setState({ loading: true });\r\n\r\n    if(this.state.searchTerm === ''){\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n    } else{\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=es-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch( endpoint )\r\n    .then( result => result.json() )\r\n    .then( result => {\r\n      // Here we must have the data in json format\r\n      this.setState({\r\n        // Using ES6 Spread operator to take out array elements \r\n        movies: [...this.state.movies, ...result.results],\r\n        heroImage: this.state.heroImage || result.results[0],\r\n        loading: false,\r\n        currentPage: result.page,\r\n        totalPages: result.total_pages\r\n      }, () => {\r\n        if (this.state.searchTerm === \"\")\r\n          localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n      });\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"rmdb-home\">\r\n        {/** Ternary Operator*/}\r\n        { this.state.heroImage ?\r\n        <div>\r\n          <HeroImage \r\n            image={ `${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}` }\r\n            title={ this.state.heroImage.original_title }\r\n            text={ this.state.heroImage.overview }\r\n          />\r\n          <SearchBar callback={ this.searchItems }/>\r\n        </div> : null }\r\n        <div className=\"rmdb-home-grid\">\r\n          <FourColGrid \r\n            header={ this.state.searchTerm ? 'Search Result' : 'Popular Movies' }\r\n            loading={ this.state.loading }\r\n            >\r\n\r\n            { this.state.movies.map( (element, i) => {\r\n              return <MovieThumb \r\n                        key={i}\r\n                        clickable={true}\r\n                        image={ element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg' }\r\n                        movieId={element.id}\r\n                        movieName={element.original_title}\r\n                      />\r\n            })};\r\n          </FourColGrid>\r\n          { this.state.loading ? <Spinner /> : null }\r\n          {/** To make more that one check use ( ) */}\r\n          {( this.state.currentPage <= this.state.totalPages && !this.state.loading ) ? \r\n            <LoadMoreBtn \r\n              text=\"Load more...\"\r\n              onClick={ this.loadMoreItems }\r\n            /> : null }\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Home;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from '../elements/Header/Header';\nimport Movie from '../Movie/Movie';\nimport NotFound from '../elements/NotFound/NotFound';\nimport Home from '../Home/Home';\n\nconst App = () => {\n  return(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <React.Fragment>\n        <Header />\n        <Switch>\n        <Route path={'/'} component={ Home } exact />\n        <Route path=\"/:movieId\" component={ Movie } exact />\n        <Route component={ NotFound } />\n        </Switch>\n      </React.Fragment>\n    </BrowserRouter>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}